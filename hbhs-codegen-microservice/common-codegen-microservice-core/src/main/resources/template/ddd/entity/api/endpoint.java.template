package ${packageName}.api.endpoint;

import ${packageName}.domain.request.param.${entityClassName}CreateParam;
import ${packageName}.domain.request.param.${entityClassName}QueryParam;
import ${packageName}.domain.request.param.${entityClassName}UpdateParam;
import ${packageName}.domain.response.info.${entityClassName}Info;
import com.hbhs.common.domain.model.request.GenericRequest;
import com.hbhs.common.domain.model.request.IdRequest;
import com.hbhs.common.domain.model.request.QueryRequest;
import com.hbhs.common.domain.model.response.TPageResult;
import com.hbhs.common.domain.model.response.TSingleResult;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

public interface ${entityClassName}Endpoint {
    static final String API_NAME = "${entityClassName}Endpoint";
    static final String VERSION = "/endpoint/v1";

    @RequestMapping(value = VERSION+"/user/create", method = RequestMethod.POST)
    TSingleResult<${entityClassName}Info> create(@RequestBody GenericRequest<${entityClassName}CreateParam> request);

    @RequestMapping(value = VERSION+"/user/update", method = RequestMethod.POST)
    TSingleResult<Boolean> udpate(@RequestBody GenericRequest<${entityClassName}UpdateParam> request);

    @RequestMapping(value = VERSION+"/user/find_by_id", method = RequestMethod.POST)
    TSingleResult<${entityClassName}Info> findById(@RequestBody IdRequest request);

    @RequestMapping(value = VERSION+"/user/delete_by_id", method = RequestMethod.POST)
    TSingleResult<Boolean> deleteById(@RequestBody IdRequest request);

    @RequestMapping(value = VERSION+"/user/query", method = RequestMethod.POST)
    TPageResult<${entityClassName}Info> query${entityClassName}(@RequestBody QueryRequest<${entityClassName}QueryParam> request);
}
